Function:
  Enabled For RDMLX:  Yes

  Source: |
    Function Options(*DIRECT) Rcv_List(#wLKData #wLRet)
    
    * ******************************************************************************************************
    * Test Case Description
    *
    * Generic Select using Numerics With_key column types using Logical Views
    *
    * That is:
    * SIGNED, DECIMAL, INTEGER 1, 2, 4, 8
    * BLOB also added but not used. Its only there to force use of SQL on IBM i.
    * Tests are executed from only a Function but NOT a Reusable Part.
    *
    * ******************************************************************************************************
    
    * Unique Key Data.
    Def_List Name(#wLKData) Fields(#VTF_KEY1 #VTF_KEY2 #VTF_KEY3) Type(*WORKING) Entrys(1)
    
    * Return messages.
    Def_List Name(#wLRet) Fields(#BIFMSGC #BIFMSG1 #BIFMSG2) Counter(#BIFMSGCNT) Type(*WORKING) Entrys(*MAX)
    
    * List Of Test data.
    Define Field(#LF_Test_Data) Reffld(#BIFN0702A)
    Define Field(#LF_Test_Data_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Key_Count) Reffld(#Std_Count)
    Def_List Name(#wLTestData) Fields(#LF_Test_Data) Counter(#LF_Test_Data_Count) Type(*WORKING) Entrys(*MAX)
    Def_List Name(#wLTestKey) Fields(#LF_Test_Data #LF_TraceData) Counter(#LF_Test_Key_Count) Type(*WORKING) Entrys(*MAX)
    
    Define Field(#LF_rc) Reffld(#BIFA002A) Default(OK)
    Define Field(#LF_i) Reffld(#Std_Count)
    Define Field(#LF_j) Reffld(#Std_Count)
    Define Field(#LF_Total_Errors) Reffld(#Std_Count)
    Define Field(#LF_Total_Warnings) Reffld(#Std_Count)
    Define Field(#LF_Execution_Type) Reffld(#Std_Alpha)
    Define Field(#LF_Remote_Platform) Reffld(#BIFA001A)
    
    Define Field(#LF_Test_Data_SIGNED) Reffld(#BIFN0702A)
    Define Field(#LF_Test_Data_DECIMAL) Reffld(#BIFP1504A)
    Define Field(#LF_Test_Data_INT1) Reffld(#BIFINT1A)
    Define Field(#LF_Test_Data_INT2) Reffld(#BIFINT2A)
    Define Field(#LF_Test_Data_INT4) Reffld(#BIFINT4A)
    Define Field(#LF_Test_Data_INT8) Reffld(#BIFINT8A)
    Define Field(#LF_Operation_Name) Reffld(#BIFMSG1)
    
    * Counter for the current Function's I/O queries.
    Define Field(#LF_Func_L157033FI1) Reffld(#Std_Count)
    Define Field(#LF_Func_L157033FI2) Reffld(#Std_Count)
    Define Field(#LF_Func_L157033FI4) Reffld(#Std_Count)
    Define Field(#LF_Func_L157033FI8) Reffld(#Std_Count)
    Define Field(#LF_Func_L157033FP) Reffld(#Std_Count)
    Define Field(#LF_Func_L157033FPD) Reffld(#Std_Count)
    Define Field(#LF_Func_L157033FN) Reffld(#Std_Count)
    Define Field(#LF_Func_L157033FND) Reffld(#Std_Count)
    
    Group_By Name(#LF_Func_Counters) Fields(#LF_Func_L157033FI1 #LF_Func_L157033FI2 #LF_Func_L157033FI4 #LF_Func_L157033FI8 #LF_Func_L157033FP #LF_Func_L157033FPD #LF_Func_L157033FN #LF_Func_L157033FND #LF_Total_Errors)
    
    Define Field(#LF_Test_Result_L157033FI1) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_L157033FI2) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_L157033FI4) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_L157033FI8) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_L157033FP) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_L157033FPD) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_L157033FN) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_L157033FND) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Signed_Decimals_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Exact_Signed_Decimals_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Signed_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Exact_Signed_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Signed_Decimals_Backwards_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Signed_Backwards_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Signed_Forwards_Descending_Count) Reffld(#STD_COUNT)
    Define Field(#LF_Test_Result_Generic_Packed_Decimals_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Exact_Packed_Decimals_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Packed_Decimals_Backwards_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Packed_Decimals_Forwards_Descending_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Decimal_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Exact_Decimal_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Decimal_Backwards_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Decimal_Forwards_Descending_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Integer1_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Exact_Integer1_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Integer2_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Exact_Integer2_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Integer4_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Exact_Integer4_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Generic_Integer8_Count) Reffld(#Std_Count)
    Define Field(#LF_Test_Result_Exact_Integer8_Count) Reffld(#Std_Count)
    
    * Signed_Decimals
    Def_List Name(#wLTestResultGenericSigned_Decimals) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Signed_Decimals_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericSigned_DecimalsBackwards) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Signed_Decimals_Backwards_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultExactSigned_Decimals) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Exact_Signed_Decimals_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericSigned) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Signed_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericSignedBackwards) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Signed_Backwards_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericSignedForwardsDescending) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Signed_Forwards_Descending_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultExactSigned) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Exact_Signed_Count) Type(*WORKING) Entrys(*MAX)
    
    * Packed Decimals
    Def_List Name(#wLTestResultGenericPacked_Decimals) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Packed_Decimals_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericPacked_DecimalsBackwards) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Packed_Decimals_Backwards_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericPacked_DecimalsForwardsDescending) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Packed_Decimals_Forwards_Descending_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultExactPacked_Decimals) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Exact_Packed_Decimals_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericDecimal) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Decimal_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericDecimalBackwards) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Decimal_Backwards_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericDecimalForwardsDescending) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Decimal_Forwards_Descending_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultExactDecimal) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Exact_Decimal_Count) Type(*WORKING) Entrys(*MAX)
    
    * Integer1
    Def_List Name(#wLTestResultGenericInteger1) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer1_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger1Backwards) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer1_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger1ForwardsDescending) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer1_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger1BackwardsDescending) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer1_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultExactInteger1) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Exact_Integer1_Count) Type(*WORKING) Entrys(*MAX)
    
    * Integer2
    Def_List Name(#wLTestResultGenericInteger2) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer2_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger2Backwards) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer2_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger2ForwardsDescending) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer2_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultExactInteger2) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Exact_Integer2_Count) Type(*WORKING) Entrys(*MAX)
    
    * Integer4
    Def_List Name(#wLTestResultGenericInteger4) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer4_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger4Backwards) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer4_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger4ForwardsDescending) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer4_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultExactInteger4) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Exact_Integer4_Count) Type(*WORKING) Entrys(*MAX)
    
    * Integer8
    Def_List Name(#wLTestResultGenericInteger8) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer8_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger8Backwards) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer8_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultGenericInteger8ForwardsDescending) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Generic_Integer8_Count) Type(*WORKING) Entrys(*MAX)
    
    Def_List Name(#wLTestResultExactInteger8) Fields(#LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND) Counter(#LF_Test_Result_Exact_Integer8_Count) Type(*WORKING) Entrys(*MAX)
    
    Define Field(#LF_TraceData) Reffld(#BIFB001E) Default(False)
    Define Field(#LF_View_Type) Reffld(#BIFMSG1)
    
    * Start testing.
    Clr_List Named(#wLRet)
    #Com_Owner.mthAdd_Msg( OK *Function ('Start - ' + *Function_Desc) )
    
    Get_Entry Number(1) From_List(#wLKData)
    #LF_Execution_Type := #VTF_KEY1
    #LF_Remote_Platform := #VTF_KEY2
    
    * Debug code to only run on a particular platform
    * Local Windows execution = *BLANKS
    If (#LF_Remote_Platform *NE I)
    * Return
    Endif
    
    * For debug. Don't run this function on IBM i. Saves time when tracing and need to look at the SuperServer IO results from IBM i
    * SuperServer IO to IBM i has #LF_Remote_Platform *EQ I and *OSAPI *EQ WIN32
    If (*OSAPI *EQ IBMI)
    * Return
    Endif
    
    * SETUP THE TEST DATA.
    Execute Subroutine(AddTestData)
    
    * DELETE / INSERT TEST DATA.
    
    #Com_Owner.mthDoDelete( #LF_rc )
    #Com_Owner.mthDoInsert( #LF_rc )
    
    * SEARCH TEST.
    #Com_Owner.mthDoSearch( #LF_rc )
    
    #Com_Owner.mthAdd_Msg( OK *Function 'End' )
    Use Builtin(CLR_MESSAGES)
    
    Return
    
    *
    * Add Test Data.
    *
    Subroutine Name(AddTestData)
    Define Field(#LF_String) Reffld(#BIFC256A)
    
    Clr_List Named(#wLTestData)
    * Generate numbers from 100.00 to 119.90 in 0.06 increments
    Begin_Loop Using(#LF_i) From(100) To(119)
    Begin_Loop Using(#LF_j) From(0) To(90) Step(6)
    #LF_String := #LF_i.asString + '.' + #LF_j.asString
    #LF_Test_Data := #LF_String.asNumber
    Add_Entry To_List(#wLTestData)
    End_Loop
    End_Loop
    
    * Generate numbers from -100.00 to -119.90 in 0.06 increments
    Begin_Loop Using(#LF_i) From(-100) To(-119) Step(-1)
    Begin_Loop Using(#LF_j) From(0) To(90) Step(6)
    #LF_String := #LF_i.asString + '.' + #LF_j.asString
    #LF_Test_Data := #LF_String.asNumber
    Add_Entry To_List(#wLTestData)
    End_Loop
    End_Loop
    
    * Keys with trailing zeroes may return multiple rows when using Generic(*YES)
    Clr_List Named(#wLTestKey)
    Clr_List Named(#wLTestResultExactSigned)
    Clr_List Named(#wLTestResultExactSigned_Decimals)
    Clr_List Named(#wLTestResultGenericSigned)
    Clr_List Named(#wLTestResultGenericSigned_Decimals)
    Clr_List Named(#wLTestResultGenericSignedBackwards)
    Clr_List Named(#wLTestResultGenericSigned_DecimalsBackwards)
    Clr_List Named(#wLTestResultGenericSignedForwardsDescending)
    Clr_List Named(#wLTestResultExactPacked_Decimals)
    Clr_List Named(#wLTestResultGenericPacked_Decimals)
    Clr_List Named(#wLTestResultGenericPacked_DecimalsBackwards)
    Clr_List Named(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    Clr_List Named(#wLTestResultExactDecimal)
    Clr_List Named(#wLTestResultGenericDecimal)
    Clr_List Named(#wLTestResultGenericDecimalBackwards)
    Clr_List Named(#wLTestResultGenericDecimalForwardsDescending)
    Clr_List Named(#wLTestResultExactInteger1)
    Clr_List Named(#wLTestResultGenericInteger1)
    Clr_List Named(#wLTestResultGenericInteger1Backwards)
    Clr_List Named(#wLTestResultGenericInteger1ForwardsDescending)
    Clr_List Named(#wLTestResultGenericInteger1BackwardsDescending)
    Clr_List Named(#wLTestResultExactInteger2)
    Clr_List Named(#wLTestResultGenericInteger2)
    Clr_List Named(#wLTestResultGenericInteger2Backwards)
    Clr_List Named(#wLTestResultGenericInteger2ForwardsDescending)
    Clr_List Named(#wLTestResultExactInteger4)
    Clr_List Named(#wLTestResultGenericInteger4Backwards)
    Clr_List Named(#wLTestResultGenericInteger4)
    Clr_List Named(#wLTestResultGenericInteger4ForwardsDescending)
    Clr_List Named(#wLTestResultExactInteger8)
    Clr_List Named(#wLTestResultGenericInteger8)
    Clr_List Named(#wLTestResultGenericInteger8Backwards)
    Clr_List Named(#wLTestResultGenericInteger8ForwardsDescending)
    * *****************************************************************************
    * Search <1>
    * *****************************************************************************
    #LF_Test_Data := 100
    #LF_TraceData := False
    Add_Entry To_List(#wLTestKey)
    * *** Generic Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericSigned_Decimals)
    * BACKWARDS
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * *** Exact Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned_Decimals)
    
    * *** Generic Signed Results
    #LF_Test_Result_L157033FP := 320
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 320
    Add_Entry To_List(#wLTestResultGenericSigned)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericSignedBackwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 672
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 642
    Add_Entry To_List(#wLTestResultGenericSignedForwardsDescending)
    
    * *** Exact Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned)
    
    * *** Generic Packed Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD := 320
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_Decimals)
    * BACKWARDS
    #LF_Test_Result_L157033FPD := 321
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FPD := 321
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    
    * *** Exact Packed Decimals Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactPacked_Decimals)
    
    * *** Generic Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP := 320
    #LF_Test_Result_L157033FN #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericDecimal)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 336
    Add_Entry To_List(#wLTestResultGenericDecimalBackwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 672
    #LF_Test_Result_L157033FP := 672
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 642
    Add_Entry To_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * *** Exact Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactDecimal)
    
    * *** Generic Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericInteger1)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FP := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericInteger1Backwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 672
    #LF_Test_Result_L157033FP := 656
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 642
    Add_Entry To_List(#wLTestResultGenericInteger1ForwardsDescending)
    * BACKWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FPD := 320
    #LF_Test_Result_L157033FP := 336
    #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * *** Exact Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger1)
    
    * *** Generic Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericInteger2)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericInteger2Backwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 672
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 642
    Add_Entry To_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * *** Exact Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger2)
    
    * *** Generic Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericInteger4)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericInteger4Backwards)
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 672
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 642
    Add_Entry To_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * *** Exact Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger4)
    
    * *** Generic Integer8 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    Add_Entry To_List(#wLTestResultGenericInteger8)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericInteger8Backwards)
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 672
    #LF_Test_Result_L157033FND := 642
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Add_Entry To_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * ***Exact Integer8 Results
    #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD := 0
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger8)
    
    * *****************************************************************************
    * Search <2>
    * *****************************************************************************
    #LF_Test_Data := 110
    #LF_TraceData := False
    Add_Entry To_List(#wLTestKey)
    * *** Generic Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Add_Entry To_List(#wLTestResultGenericSigned_Decimals)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * *** Exact Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned_Decimals)
    
    * *** Generic Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Add_Entry To_List(#wLTestResultGenericSigned)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 176
      
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericSignedBackwards)
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 352
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 322
    Endif
    Add_Entry To_List(#wLTestResultGenericSignedForwardsDescending)
    
    * *** Exact Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned)
    
    * *** Generic Packed Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD := 160
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_Decimals)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 1
    Else
    #LF_Test_Result_L157033FPD := 161
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 1
    Else
    #LF_Test_Result_L157033FPD := 161
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    
    * *** Exact Packed Decimals Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactPacked_Decimals)
    
    * *** Generic Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP := 160
    #LF_Test_Result_L157033FN #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Add_Entry To_List(#wLTestResultGenericDecimal)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 352
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 322
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * *** Exact Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactDecimal)
    
    * *** Generic Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Add_Entry To_List(#wLTestResultGenericInteger1)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FP := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 176
    #LF_Test_Result_L157033FP := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FP := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 352
    #LF_Test_Result_L157033FP := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 322
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1ForwardsDescending)
    * BACKWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FP := 16
    Else
    #LF_Test_Result_L157033FP := 176
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * *** Exact Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    
    Add_Entry To_List(#wLTestResultExactInteger1)
    
    * *** Generic Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Add_Entry To_List(#wLTestResultGenericInteger2)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 352
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 322
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * *** Exact Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger2)
    
    * *** Generic Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Add_Entry To_List(#wLTestResultGenericInteger4)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 352
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 322
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * *** Exact Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger4)
    
    * *** Generic Integer8 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    Add_Entry To_List(#wLTestResultGenericInteger8)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FND := 2
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 352
    #LF_Test_Result_L157033FND := 322
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * ***Exact Integer8 Results
    #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD := 0
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger8)
    
    * * *****************************************************************************
    * * Search <3>
    * * *****************************************************************************
    #LF_Test_Data := 111
    #LF_TraceData := False
    Add_Entry To_List(#wLTestKey)
    * *** Generic Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericSigned_Decimals)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * *** Exact Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned_Decimals)
    
    * *** Generic Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericSigned)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericSignedBackwards)
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericSignedForwardsDescending)
    
    * *** Exact Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned)
    
    * *** Generic Packed Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD := 16
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_Decimals)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 1
    Else
    #LF_Test_Result_L157033FPD := 17
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 1
    Else
    #LF_Test_Result_L157033FPD := 17
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    
    * *** Exact Packed Decimals Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactPacked_Decimals)
    
    * *** Generic Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FN #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericDecimal)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 64
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * *** Exact Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactDecimal)
    
    * *** Generic Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericInteger1)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FP := 48
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1ForwardsDescending)
    * BACKWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FP := 16
    Else
    #LF_Test_Result_L157033FP := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * *** Exact Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    
    Add_Entry To_List(#wLTestResultExactInteger1)
    
    * *** Generic Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericInteger2)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * *** Exact Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger2)
    
    * *** Generic Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericInteger4)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * *** Exact Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger4)
    
    * *** Generic Integer8 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    Add_Entry To_List(#wLTestResultGenericInteger8)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FND := 2
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FND := 34
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * ***Exact Integer8 Results
    #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD := 0
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger8)
    
    * * *****************************************************************************
    * * Search <4>
    * * *****************************************************************************
    #LF_Test_Data := 111.1
    #LF_TraceData := False
    Add_Entry To_List(#wLTestKey)
    * *** Generic Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Add_Entry To_List(#wLTestResultGenericSigned_Decimals)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 0
    Endif
    Add_Entry To_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * *** Exact Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultExactSigned_Decimals)
    
    * *** Generic Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericSigned)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericSignedBackwards)
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericSignedForwardsDescending)
    
    * *** Exact Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned)
    
    * *** Generic Packed Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD := 2
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_Decimals)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 0
    Else
    #LF_Test_Result_L157033FPD := 2
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 0
    Else
    #LF_Test_Result_L157033FPD := 2
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    
    * *** Exact Packed Decimals Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultExactPacked_Decimals)
    
    * *** Generic Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FN #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericDecimal)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 64
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * *** Exact Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactDecimal)
    
    * *** Generic Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericInteger1)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FP := 48
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1ForwardsDescending)
    * BACKWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FP := 16
    Else
    #LF_Test_Result_L157033FP := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * *** Exact Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    
    Add_Entry To_List(#wLTestResultExactInteger1)
    
    * *** Generic Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericInteger2)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * *** Exact Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger2)
    
    * *** Generic Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericInteger4)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 34
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * *** Exact Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger4)
    
    * *** Generic Integer8 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    Add_Entry To_List(#wLTestResultGenericInteger8)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FND := 2
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 64
    #LF_Test_Result_L157033FND := 34
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * ***Exact Integer8 Results
    #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD := 0
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger8)
    
    * * *****************************************************************************
    * * Search <5>
    * * *****************************************************************************
    #LF_Test_Data := -100
    #LF_TraceData := False
    Add_Entry To_List(#wLTestKey)
    
    * *** Generic Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericSigned_Decimals)
    * BACKWARDS
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * *** Exact Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned_Decimals)
    
    * *** Generic Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericSigned)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericSignedBackwards)
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 640
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 640
    Add_Entry To_List(#wLTestResultGenericSignedForwardsDescending)
    
    * *** Exact Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned)
    
    * *** Generic Packed Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD := 321
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_Decimals)
    * BACKWARDS
    #LF_Test_Result_L157033FPD := 320
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FPD := 320
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    
    * *** Exact Packed Decimals Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactPacked_Decimals)
    
    * *** Generic Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericDecimal)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericDecimalBackwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 640
    Add_Entry To_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * *** Exact Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactDecimal)
    
    * *** Generic Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericInteger1)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    #LF_Test_Result_L157033FP := 336
    Add_Entry To_List(#wLTestResultGenericInteger1Backwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 640
    #LF_Test_Result_L157033FP := 656
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 640
    Add_Entry To_List(#wLTestResultGenericInteger1ForwardsDescending)
    * BACKWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    
    #LF_Test_Result_L157033FP := 320
    
    Add_Entry To_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * *** Exact Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    
    Add_Entry To_List(#wLTestResultExactInteger1)
    
    * *** Generic Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericInteger2)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    
    Add_Entry To_List(#wLTestResultGenericInteger2Backwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 640
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 640
    
    Add_Entry To_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * *** Exact Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger2)
    
    * *** Generic Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 321
    Add_Entry To_List(#wLTestResultGenericInteger4)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    
    Add_Entry To_List(#wLTestResultGenericInteger4Backwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 640
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 640
    
    Add_Entry To_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * *** Exact Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger4)
    
    * *** Generic Integer8 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 336
    #LF_Test_Result_L157033FND := 321
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    Add_Entry To_List(#wLTestResultGenericInteger8)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    
    Add_Entry To_List(#wLTestResultGenericInteger8Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FND #LF_Test_Result_L157033FN := 640
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FND #LF_Test_Result_L157033FN := 640
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * ***Exact Integer8 Results
    #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD := 0
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger8)
    
    * * *****************************************************************************
    * * Search <6>
    * * *****************************************************************************
    #LF_Test_Data := -110
    #LF_TraceData := False
    Add_Entry To_List(#wLTestKey)
    
    * *** Generic Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #Com_Owner.mthAdd_SubMsg( OK ('Remote Platform = ' + #LF_Remote_Platform) 'Trace' )
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericSigned_Decimals)
    * BACKWARDS
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Add_Entry To_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * *** Exact Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned_Decimals)
    
    * *** Generic Signed Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    
    Add_Entry To_List(#wLTestResultGenericSigned)
    * BACKWARDS
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Add_Entry To_List(#wLTestResultGenericSignedBackwards)
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Add_Entry To_List(#wLTestResultGenericSignedForwardsDescending)
    
    * *** Exact Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP := 16
    
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned)
    
    * *** Generic Packed Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FND := 0
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 1
    Else
    #LF_Test_Result_L157033FPD := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericPacked_Decimals)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 160
    Else
    #LF_Test_Result_L157033FPD := 160
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 160
    Else
    #LF_Test_Result_L157033FPD := 160
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    
    * *** Exact Packed Decimals Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactPacked_Decimals)
    
    * *** Generic Decimal Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 176
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimal)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * *** Exact Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactDecimal)
    
    * *** Generic Integer1 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 176
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FP := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FP := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FP := 336
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1ForwardsDescending)
    * BACKWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FP := 160
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FP := 160
    Else
    #LF_Test_Result_L157033FP := 160
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * *** Exact Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    
    Add_Entry To_List(#wLTestResultExactInteger1)
    
    * *** Generic Integer2 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 176
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * *** Exact Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger2)
    
    * *** Generic Integer4 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 161
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 176
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 160
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 320
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * *** Exact Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger4)
    
    * *** Generic Integer8 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FND := 161
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 176
    Endif
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    Add_Entry To_List(#wLTestResultGenericInteger8)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 160
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 320
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * ***Exact Integer8 Results
    #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD := 0
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger8)
    
    * * *****************************************************************************
    * * Search <7>
    * * *****************************************************************************
    #LF_Test_Data := -111
    #LF_TraceData := False
    Add_Entry To_List(#wLTestKey)
    * *** Generic Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericSigned_Decimals)
    * BACKWARDS
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Add_Entry To_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * *** Exact Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned_Decimals)
    
    * *** Generic Signed Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericSigned)
    * BACKWARDS
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Add_Entry To_List(#wLTestResultGenericSignedBackwards)
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Add_Entry To_List(#wLTestResultGenericSignedForwardsDescending)
    
    * *** Exact Signed Results
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Add_Entry To_List(#wLTestResultExactSigned)
    
    * *** Generic Packed Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 1
    Else
    #LF_Test_Result_L157033FPD := 17
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_Decimals)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 16
    Else
    #LF_Test_Result_L157033FPD := 16
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD := 16
    Else
    #LF_Test_Result_L157033FPD := 16
    Endif
    #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    
    * *** Exact Packed Decimals Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactPacked_Decimals)
    
    * *** Generic Decimal Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimal)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * *** Exact Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactDecimal)
    
    * *** Generic Integer1 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FP := 48
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1ForwardsDescending)
    * BACKWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    Else
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * *** Exact Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    
    Add_Entry To_List(#wLTestResultExactInteger1)
    
    * *** Generic Integer2 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * *** Exact Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger2)
    
    * *** Generic Integer4 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * *** Exact Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger4)
    
    * *** Generic Integer8 Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FN := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FND #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * ***Exact Integer8 Results
    #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD := 0
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger8)
    
    * * *****************************************************************************
    * * Search <8>
    * * *****************************************************************************
    #LF_Test_Data := -111.1
    #LF_TraceData := False
    Add_Entry To_List(#wLTestKey)
    
    * *** Generic Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 0
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Endif
    Add_Entry To_List(#wLTestResultGenericSigned_Decimals)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 2
    Add_Entry To_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * *** Exact Signed_Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultExactSigned_Decimals)
    
    * *** Generic Signed Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericSigned)
    * BACKWARDS
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Add_Entry To_List(#wLTestResultGenericSignedBackwards)
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Add_Entry To_List(#wLTestResultGenericSignedForwardsDescending)
    
    * *** Exact Signed Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactSigned)
    
    * *** Generic Packed Decimals Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 0
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 0
    Else
    #LF_Test_Result_L157033FPD := 2
    #LF_Test_Result_L157033FND := 0
    Endif
    Add_Entry To_List(#wLTestResultGenericPacked_Decimals)
    * BACKWARDS
    #LF_Test_Result_L157033FND := 0
    #LF_Test_Result_L157033FPD := 2
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * FORWARDS DESCENDING
    #LF_Test_Result_L157033FND := 0
    #LF_Test_Result_L157033FPD := 2
    Add_Entry To_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    
    * *** Exact Packed Decimals Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 0
    Add_Entry To_List(#wLTestResultExactPacked_Decimals)
    
    * *** Generic Decimal Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimal)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalBackwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * *** Exact Decimal Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactDecimal)
    
    * *** Generic Integer1 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FP := 48
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1ForwardsDescending)
    * BACKWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FP := 16
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * *** Exact Integer1 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FPD := 1
    
    Add_Entry To_List(#wLTestResultExactInteger1)
    
    * *** Generic Integer2 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * *** Exact Integer2 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger2)
    
    * *** Generic Integer4 Results
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * *** Exact Integer4 Results
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FP #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger4)
    
    * *** Generic Integer8 Results
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FND := 1
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FND := 17
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 32
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8)
    * BACKWARDS
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FN := 16
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 := 16
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 640
    #LF_Test_Result_L157033FND #LF_Test_Result_L157033FN := 16
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8Backwards)
    
    * FORWARDS DESCENDING
    If (#LF_Remote_Platform *EQ I)
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN #LF_Test_Result_L157033FND := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Else
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FND #LF_Test_Result_L157033FN := 32
    #LF_Test_Result_L157033FPD #LF_Test_Result_L157033FP := 1280
    Endif
    Add_Entry To_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * ***Exact Integer8 Results
    #LF_Test_Result_L157033FP #LF_Test_Result_L157033FPD := 0
    #LF_Test_Result_L157033FI1 #LF_Test_Result_L157033FI2 #LF_Test_Result_L157033FI4 #LF_Test_Result_L157033FI8 #LF_Test_Result_L157033FN := 16
    #LF_Test_Result_L157033FND := 1
    Add_Entry To_List(#wLTestResultExactInteger8)
    
    Endroutine
    
    *
    * Delete Data.
    *
    Mthroutine Name(mthDoDelete)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #LF_i := 0
    Dowhile Cond(#this_rc = OK)
    Fetch Fields(#F157033K1) From_File(VTL157033F) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    If (#this_rc = OK)
    #LF_i += 1
    Delete From_File(VTL157033F) With_Key(#F157033K1) Io_Error(*NEXT) Val_Error(*NEXT)
    Endif
    Endwhile
    
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc 'Delete Data' (#LF_i.AsString + ' set of key records deleted') )
    Endroutine
    
    *
    * Insert Data.
    *
    Mthroutine Name(mthDoInsert)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    Define Field(#LF_iMod) Reffld(#STD_COUNT)
    
    #F157033K1 := #VTF_KEY1 + #VTF_KEY2 + #VTF_KEY3
    #F157033K2 := 0
    #BIFBLOBA := *SQLNULL
    
    If (#this_rc = OK)
    Begin_Loop Using(#LF_i) To(#LF_Test_Data_Count)
    Get_Entry Number(#LF_i) From_List(#wLTestData)
    #F157033K2 += 1
    #BIFINT1A #BIFINT2A #BIFINT4A #BIFINT8A #BIFP1500A #BIFP1504A #BIFN0700A #BIFN0702A := #LF_Test_Data
    Insert Fields(*ALL) To_File(VTL157033F) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    If (#this_rc *NE OK)
    #this_rc := ER
    Leave
    Endif
    End_Loop
    Endif
    
    #Com_Owner.mthAdd_SubMsg( #this_rc 'Insert Data' (#F157033K2.AsString + ' / ' + #LF_Test_Data_Count.AsString + ' records inserted') )
    Endroutine
    
    *
    * Search.
    *
    Mthroutine Name(mthDoSearch)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    If (#this_rc = OK)
    Begin_Loop Using(#LF_i) To(#LF_Test_Key_Count)
    Get_Entry Number(#LF_i) From_List(#wLTestKey)
    * Note that #LF_TraceData has just been set globally
    
    #Com_Owner.mthAdd_SubMsg( #this_rc ('<' + #LF_i.AsString + '> Search Test: ' + *Quote + #LF_Test_Data.asString + *Quote) '' )
    
    #Com_Owner.mthSearch_By_Signed_Decimals( #LF_Test_Data #this_rc )
    #Com_Owner.mthSearch_By_Signed( #LF_Test_Data #this_rc )
    #Com_Owner.mthSearch_By_Decimal_Decimals( #LF_Test_Data #this_rc )
    #Com_Owner.mthSearch_By_Decimal( #LF_Test_Data #this_rc )
    #Com_Owner.mthSearch_By_Integer1( #LF_Test_Data #this_rc )
    #Com_Owner.mthSearch_By_Integer2( #LF_Test_Data #this_rc )
    #Com_Owner.mthSearch_By_Integer4( #LF_Test_Data #this_rc )
    #Com_Owner.mthSearch_By_Integer8( #LF_Test_Data #this_rc )
    
    If (#this_rc *NE OK)
    Leave
    Endif
    End_Loop
    Endif
    Endroutine
    
    *
    * mthDoTestResult
    *
    * Requires results (#LF_Test_Result_*) to have been appropriately populated from the Test Result lists
    * And then the actual SELECT results in the #LF_Func_* set of fields
    *
    Mthroutine Name(mthDoTestResult)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    If (#LF_Total_Errors > 0)
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Total errors: ' + #LF_Total_Errors.asString) )
    #this_rc := ER
    Else
    If ((#LF_Test_Result_L157033FI1 <> #LF_Func_L157033FI1) *OrIf (#LF_Test_Result_L157033FI2 <> #LF_Func_L157033FI2) *OrIf (#LF_Test_Result_L157033FI4 <> #LF_Func_L157033FI4) *OrIf (#LF_Test_Result_L157033FI8 <> #LF_Func_L157033FI8) *OrIf (#LF_Test_Result_L157033FP <> #LF_Func_L157033FP) *OrIf (#LF_Test_Result_L157033FPD <> #LF_Func_L157033FPD) *OrIf (#LF_Test_Result_L157033FN <> #LF_Func_L157033FN) *OrIf (#LF_Test_Result_L157033FND <> #LF_Func_L157033FND))
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Go through log above to see which result is mis-matched') )
    Endif
    Endif
    Endroutine
    
    *
    * Search By SIGNED with Decimals.
    *
    Mthroutine Name(mthSearch_By_Signed_Decimals)
    Define_Map For(*INPUT) Class(#BIFN0702A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #Com_Owner.mthFunc_Search_Generic_Signed_Decimals( '*** SELECT GENERIC Key: S(7,2)' #this_test_value #this_rc )
    #Com_Owner.mthFunc_Search_Exact_Signed_Decimals( '*** SELECT EXACT Key: S(7,2)' #this_test_value #this_rc )
    
    Endroutine
    
    *
    *
    *
    Mthroutine Name(mthFunc_Search_Generic_Signed_Decimals)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFN0702A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthSearch_By_Signed_Decimals' )
    #LF_Func_Counters := *NULL
    
    If (#LF_i > #LF_Test_Result_Generic_Signed_Decimals_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericSigned_Decimals)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS mthSearch_By_Signed_Decimals' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericSigned_DecimalsBackwards)
    
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *FORWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS DESCENDING mthSearch_By_Signed_Decimals' )
    #LF_Func_Counters := *NULL
    
    If (#LF_i > #LF_Test_Result_Generic_Signed_Decimals_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericSigned_DecimalsBackwards)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS DESCENDING mthSearch_By_Signed_Decimals' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericSigned_Decimals)
    
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    Endroutine
    
    *
    *
    *
    Mthroutine Name(mthFunc_Search_Exact_Signed_Decimals)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFN0702A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Exact_Signed_Decimals' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Exact_Signed_Decimals_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultExactSigned_Decimals)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    *
    * Search By SIGNED without Decimals.
    *
    Mthroutine Name(mthSearch_By_Signed)
    Define_Map For(*INPUT) Class(#BIFN0700A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #Com_Owner.mthFunc_Search_Generic_Signed( '*** SELECT GENERIC Key: S(7,0)' #this_test_value #this_rc )
    #Com_Owner.mthFunc_Search_Exact_Signed( '*** SELECT EXACT Key: S(7,0)' #this_test_value #this_rc )
    
    Endroutine
    
    *
    *
    *
    Mthroutine Name(mthFunc_Search_Generic_Signed)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFN0700A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Generic_Signed' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Generic_Signed_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericSigned)
    Endif
    
    * ****************************************************************************
    * *FORWARDS
    * ****************************************************************************
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    * * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    * * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT8 := #this_test_value
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#LF_Test_Data_INT8) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS mthFunc_Search_Generic_Signed' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericSignedBackwards)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT8 := #this_test_value
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#LF_Test_Data_INT8) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *FORWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS DESCENDING mthFunc_Search_Generic_Signed' )
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericSignedForwardsDescending)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    * * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    * * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT8 := #this_test_value
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#LF_Test_Data_INT8) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS DESCENDING mthFunc_Search_Generic_Signed' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericSigned)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D *BACKWARDS. Rows = ' + #LF_Func_L157033FI2.asString) (' Expected = ' + #LF_Test_Result_L157033FI2.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    * * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D *BACKWARDS. Rows = ' + #LF_Func_L157033FI4.asString) (' Expected = ' + #LF_Test_Result_L157033FI4.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    * * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT8 := #this_test_value
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#LF_Test_Data_INT8) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D *BACKWARDS. Rows = ' + #LF_Func_L157033FI8.asString) (' Expected = ' + #LF_Test_Result_L157033FI8.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    *
    *
    *
    Mthroutine Name(mthFunc_Search_Exact_Signed)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFN0700A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Exact_Signed' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Exact_Signed_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultExactSigned)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    * * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    * * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    *
    * Search by Packed Decimals
    *
    Mthroutine Name(mthSearch_By_Decimal_Decimals)
    Define_Map For(*INPUT) Class(#BIFP1504A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    #Com_Owner.mthFunc_Search_Generic_Packed_Decimals( '*** SELECT GENERIC Key: Packed(15,4)' #this_test_value #this_rc )
    #Com_Owner.mthFunc_Search_Exact_Packed_Decimals( '*** SELECT EXACT Key: Packed(15,4)' #this_test_value #this_rc )
    
    Endroutine
    *
    *
    *
    Mthroutine Name(mthFunc_Search_Generic_Packed_Decimals)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFP1504A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthSearch_By_Packed_Decimals' )
    #LF_Func_Counters := *NULL
    
    If (#LF_i > #LF_Test_Result_Generic_Packed_Decimals_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericPacked_Decimals)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS mthSearch_By_Packed_Decimals' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericPacked_DecimalsBackwards)
    
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *FORWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS DESCENDING mthSearch_By_Packed_Decimals' )
    #LF_Func_Counters := *NULL
    
    If (#LF_i > #LF_Test_Result_Generic_Packed_Decimals_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericPacked_DecimalsForwardsDescending)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS DESCENDING mthSearch_By_Packed_Decimals' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericPacked_Decimals)
    
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Exact_Packed_Decimals)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFP1504A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Exact_Packed_Decimals' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Exact_Packed_Decimals_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultExactPacked_Decimals)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthSearch_By_Decimal)
    Define_Map For(*INPUT) Class(#BIFP1500A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #Com_Owner.mthFunc_Search_Generic_Decimal( '*** SELECT GENERIC Key: Packed(15,0)' #this_test_value #this_rc )
    #Com_Owner.mthFunc_Search_Exact_Decimal( '*** SELECT EXACT Key: Packed(15,0)' #this_test_value #this_rc )
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Generic_Decimal)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFP1500A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Generic_Decimal' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Generic_Decimal_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericDecimal)
    Endif
    
    * ****************************************************************************
    * *FORWARDS
    * ****************************************************************************
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.asValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *FORWARDS. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.asValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *FORWARDS. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *FORWARDS. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *FORWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *FORWARDS. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2 *FORWARDS. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4 *FORWARDS. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8 *FORWARDS. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS mthFunc_Search_Generic_Decimal' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericDecimalBackwards)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED( 7,0 ).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString) (' Expected = ' + #LF_Test_Result_L157033FP.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2 *BACKWARDS. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4 *BACKWARDS. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT8 := #this_test_value
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8 *BACKWARDS. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * * ****************************************************************************
    * * *FORWARDS DESCENDING
    * * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS DESCENDING mthFunc_Search_Generic_Decimal' )
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericDecimalForwardsDescending)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD *FORWARDS. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNN *FORWARDS. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD *FORWARDS. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT8 := #this_test_value
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * * ****************************************************************************
    * * *BACKWARDS DESCENDING
    * * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS DESCENDING mthFunc_Search_Generic_Decimal' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericDecimal)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString) (' Expected = ' + #LF_Test_Result_L157033FP.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D *BACKWARDS. Rows = ' + #LF_Func_L157033FI2.asString) (' Expected = ' + #LF_Test_Result_L157033FI2.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D *BACKWARDS. Rows = ' + #LF_Func_L157033FI4.asString) (' Expected = ' + #LF_Test_Result_L157033FI4.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D *BACKWARDS. Rows = ' + #LF_Func_L157033FI8.asString) (' Expected = ' + #LF_Test_Result_L157033FI8.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Exact_Decimal)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFP1500A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Exact_Decimal' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Exact_Decimal_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultExactDecimal)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    *  SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.AsValue) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    *  INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    *  INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#LF_Test_Data_INT4) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    *
    *  INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT8 := #this_test_value
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthSearch_By_Integer1)
    Define_Map For(*INPUT) Class(#BIFINT1A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #Com_Owner.mthFunc_Search_Generic_Integer1( '*** SELECT GENERIC Key: Int(1)' #this_test_value #this_rc )
    #Com_Owner.mthFunc_Search_Exact_Integer1( '*** SELECT EXACT Key: Int(1)' #this_test_value #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Generic_Integer1)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFINT1A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Generic_Integer1' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Generic_Integer1_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger1)
    Endif
    
    *
    * FORWARDS
    *
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED( 7,0 ).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,4 ).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,0 ).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    *
    * BACKWARDS
    *
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS mthFunc_Search_Generic_Integer1' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger1Backwards)
    
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED( 7,0 ).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,4 ).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,0 ).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    *
    * FORWARDS DESCENDING
    *
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS DESCENDING mthFunc_Search_Generic_Integer1' )
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger1ForwardsDescending)
    
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED( 7,0 ).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,4 ).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,0 )
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    *
    * BACKWARDS DESCENDING
    *
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS DESCENDING mthFunc_Search_Generic_Integer1' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger1BackwardsDescending)
    
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED( 7,0 ).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,4 ).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,0 )
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D *BACKWARDS. Rows = ' + #LF_Func_L157033FI2.asString) (' Expected = ' + #LF_Test_Result_L157033FI2.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D *BACKWARDS. Rows = ' + #LF_Func_L157033FI4.asString) (' Expected = ' + #LF_Test_Result_L157033FI4.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D *BACKWARDS. Rows = ' + #LF_Func_L157033FI8.asString) (' Expected = ' + #LF_Test_Result_L157033FI8.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Exact_Integer1)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFINT1A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Exact_Integer1' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Exact_Integer1_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultExactInteger1)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *FORWARDS. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *FORWARDS. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *FORWARDS. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *FORWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *FORWARDS. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2 *FORWARDS. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4 *FORWARDS. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8 *FORWARDS. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthSearch_By_Integer2)
    Define_Map For(*INPUT) Class(#BIFINT2A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #Com_Owner.mthFunc_Search_Generic_Integer2( '*** SELECT GENERIC Key: Int(2)' #this_test_value #this_rc )
    #Com_Owner.mthFunc_Search_Exact_Integer2( '*** SELECT EXACT Key: Int(2)' #this_test_value #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Generic_Integer2)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFINT2A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Generic_Integer2' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Generic_Integer2_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger2)
    Endif
    
    * ****************************************************************************
    * *FORWARDS
    * ****************************************************************************
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *FORWARDS. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *FORWARDS. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *FORWARDS. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *FORWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *FORWARDS. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2 *FORWARDS. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4 *FORWARDS. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8 *FORWARDS. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS mthFunc_Search_Generic_Integer2' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger2Backwards)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2 *BACKWARDS. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4 *BACKWARDS. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8 *BACKWARDS. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *FORWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS DESCENDING mthFunc_Search_Generic_Integer2' )
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger2ForwardsDescending)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD *FORWARDS. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNN *FORWARDS. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD *FORWARDS. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD *FORWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D *FORWARDS. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D *FORWARDS. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D *FORWARDS. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D *FORWARDS. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS DESCENDING mthFunc_Search_Generic_Integer2' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger2)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D *BACKWARDS. Rows = ' + #LF_Func_L157033FI2.asString) (' Expected = ' + #LF_Test_Result_L157033FI2.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D *BACKWARDS. Rows = ' + #LF_Func_L157033FI4.asString) (' Expected = ' + #LF_Test_Result_L157033FI4.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D *BACKWARDS. Rows = ' + #LF_Func_L157033FI8.asString) (' Expected = ' + #LF_Test_Result_L157033FI8.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Exact_Integer2)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFINT2A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Exact_Integer2' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Exact_Integer2_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultExactInteger2)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *FORWARDS. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *FORWARDS. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *FORWARDS. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *FORWARDS. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *FORWARDS. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2 *FORWARDS. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4 *FORWARDS. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8 *FORWARDS. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthSearch_By_Integer4)
    Define_Map For(*INPUT) Class(#BIFINT4A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #Com_Owner.mthFunc_Search_Generic_Integer4( '*** SELECT GENERIC Key: Int(4)' #this_test_value #this_rc )
    #Com_Owner.mthFunc_Search_Exact_Integer4( '*** SELECT EXACT Key: Int(4)' #this_test_value #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Generic_Integer4)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFINT4A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Generic_Integer4' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Generic_Integer4_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger4)
    Endif
    
    * ****************************************************************************
    * *FORWARDS
    * ****************************************************************************
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED( 7,0 ).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    * #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS mthFunc_Search_Generic_Integer4' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger4Backwards)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED( 7,0 ).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString) (' Expected = ' + #LF_Test_Result_L157033FP.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *FORWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS DESCENDING mthFunc_Search_Generic_Integer4' )
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger4ForwardsDescending)
    
    * SIGNED( 7,2 ).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS DESCENDING mthFunc_Search_Generic_Integer4' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger4)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D *BACKWARDS. Rows = ' + #LF_Func_L157033FI2.asString) (' Expected = ' + #LF_Test_Result_L157033FI2.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D *BACKWARDS. Rows = ' + #LF_Func_L157033FI4.asString) (' Expected = ' + #LF_Test_Result_L157033FI4.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D *BACKWARDS. Rows = ' + #LF_Func_L157033FI8.asString) (' Expected = ' + #LF_Test_Result_L157033FI8.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Exact_Integer4)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFINT4A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Exact_Integer4' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Exact_Integer4_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultExactInteger4)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.AsValue) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthSearch_By_Integer8)
    Define_Map For(*INPUT) Class(#BIFINT8A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #Com_Owner.mthFunc_Search_Generic_Integer8( '*** SELECT GENERIC Key: Int(8)' #this_test_value #this_rc )
    #Com_Owner.mthFunc_Search_Exact_Integer8( '*** SELECT EXACT Key: Int(8)' #this_test_value #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Generic_Integer8)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFINT8A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Generic_Integer8' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Generic_Integer8_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger8)
    Endif
    
    * ****************************************************************************
    * *FORWARDS
    * ****************************************************************************
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS mthFunc_Search_Generic_Integer8' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger8Backwards)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString) (' Expected = ' + #LF_Test_Result_L157033FP.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1 *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *FORWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS DESCENDING mthFunc_Search_Generic_Integer8' )
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger8ForwardsDescending)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    * ****************************************************************************
    * *BACKWARDS DESCENDING
    * ****************************************************************************
    #this_rc := OK
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*BACKWARDS DESCENDING mthFunc_Search_Generic_Integer8' )
    Change Field(#LF_Func_Counters) To(*NULL)
    Get_Entry Number(#LF_i) From_List(#wLTestResultGenericInteger8)
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L57033FNDD) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FNDD *BACKWARDS. Rows = ' + #LF_Func_L157033FND.asString) (' Expected = ' + #LF_Test_Result_L157033FND.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L57033FND) With_Key(#this_test_value.AsValue) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FND *BACKWARDS. Rows = ' + #LF_Func_L157033FN.asString) (' Expected = ' + #LF_Test_Result_L157033FN.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L57033FPDD) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPDD *BACKWARDS. Rows = ' + #LF_Func_L157033FPD.asString) (' Expected = ' + #LF_Test_Result_L157033FPD.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,0).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L57033FPD) With_Key(#this_test_value.Decimals) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FPD *BACKWARDS. Rows = ' + #LF_Func_L157033FP.asString) (' Expected = ' + #LF_Test_Result_L157033FP.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L57033FI1D) With_Key(#LF_Test_Data_INT1) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI1D *BACKWARDS. Rows = ' + #LF_Func_L157033FI1.asString) (' Expected = ' + #LF_Test_Result_L157033FI1.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L57033FI2D) With_Key(#LF_Test_Data_INT2) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI2D *BACKWARDS. Rows = ' + #LF_Func_L157033FI2.asString) (' Expected = ' + #LF_Test_Result_L157033FI2.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L57033FI4D) With_Key(#LF_Test_Data_INT4) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI4D *BACKWARDS. Rows = ' + #LF_Func_L157033FI4.asString) (' Expected = ' + #LF_Test_Result_L157033FI4.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L57033FI8D) With_Key(#this_test_value) Nbr_Keys(*COMPUTE) Generic(*YES) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT) Options(*BACKWARDS)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L57033FI8D *BACKWARDS. Rows = ' + #LF_Func_L157033FI8.asString) (' Expected = ' + #LF_Test_Result_L157033FI8.asString) )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    Mthroutine Name(mthFunc_Search_Exact_Integer8)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_operation)
    Define_Map For(*INPUT) Class(#BIFINT8A) Name(#this_test_value)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    #this_rc := OK
    
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation '*FORWARDS mthFunc_Search_Exact_Integer8' )
    Change Field(#LF_Func_Counters) To(*NULL)
    
    If (#LF_i > #LF_Test_Result_Exact_Integer8_Count)
    #this_rc := ER
    #Com_Owner.mthAdd_SubMsg( #this_rc #this_operation ('Test result ' + #LF_i.asString + ' missing from Test Result List') )
    Return
    Else
    Get_Entry Number(#LF_i) From_List(#wLTestResultExactInteger8)
    Endif
    
    * SIGNED(7,2).
    #LF_View_Type := ' Key: S(7,2)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0702A) From_File(L157033FND) With_Key(#this_test_value.AsValue) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FND += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0702A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FND. Rows = ' + #LF_Func_L157033FND.asString + ' Expected = ' + #LF_Test_Result_L157033FND.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * SIGNED(7,0).
    #LF_View_Type := ' Key: S(7,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFN0700A) From_File(L157033FN) With_Key(#this_test_value.AsValue) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FN += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFN0700A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FN. Rows = ' + #LF_Func_L157033FN.asString + ' Expected = ' + #LF_Test_Result_L157033FN.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS(15,4).
    #LF_View_Type := ' Key: DECIMALS(15,4)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1504A) From_File(L157033FPD) With_Key(#this_test_value.Decimals) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FPD += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1504A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPD. Rows = ' + #LF_Func_L157033FPD.asString + ' Expected = ' + #LF_Test_Result_L157033FPD.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * DECIMALS( 15,0 ).
    #LF_View_Type := ' Key: DECIMALS(15,0)'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    Select Fields(#BIFP1500A) From_File(L157033FPA) With_Key(#this_test_value.Decimals) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FP += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFP1500A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FPA. Rows = ' + #LF_Func_L157033FP.asString + ' Expected = ' + #LF_Test_Result_L157033FP.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 1.
    #LF_View_Type := ' Key: INTEGER 1'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT1 := #this_test_value
    Select Fields(#BIFINT1A) From_File(L157033FI1) With_Key(#LF_Test_Data_INT1) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI1 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT1A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI1. Rows = ' + #LF_Func_L157033FI1.asString + ' Expected = ' + #LF_Test_Result_L157033FI1.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 2.
    #LF_View_Type := ' Key: INTEGER 2'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT2 := #this_test_value
    Select Fields(#BIFINT2A) From_File(L157033FI2) With_Key(#LF_Test_Data_INT2) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI2 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT2A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI2. Rows = ' + #LF_Func_L157033FI2.asString + ' Expected = ' + #LF_Test_Result_L157033FI2.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 4.
    #LF_View_Type := ' Key: INTEGER 4'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    #LF_Test_Data_INT4 := #this_test_value
    Select Fields(#BIFINT4A) From_File(L157033FI4) With_Key(#LF_Test_Data_INT4) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI4 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT4A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI4. Rows = ' + #LF_Func_L157033FI4.asString + ' Expected = ' + #LF_Test_Result_L157033FI4.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * INTEGER 8.
    #LF_View_Type := ' Key: INTEGER 8'
    #Com_Owner.mthAdd_Msg( #this_rc (#LF_View_Type) ('Key Value:' + #this_test_value.asString) )
    
    Select Fields(#BIFINT8A) From_File(L157033FI8) With_Key(#this_test_value) Io_Status(#this_rc) Io_Error(*NEXT) Val_Error(*NEXT)
    #LF_Func_L157033FI8 += 1
    #Com_Owner.mthAdd_TraceMsg( #this_rc '' ('Result: ' + #BIFINT8A.asString) )
    Endselect
    #Com_Owner.mthAdd_SubMsg( #this_rc ('On LV L157033FI8. Rows = ' + #LF_Func_L157033FI8.asString + ' Expected = ' + #LF_Test_Result_L157033FI8.asString) '' )
    If ((#this_rc = ER) *Or (#this_rc = VE))
    #LF_Total_Errors += 1
    Else
    #this_rc := OK
    Endif
    
    * REPORT ON THE FINDING.
    If (#LF_Total_Errors > 0)
    #this_rc := ER
    Endif
    #Com_Owner.mthDoTestResult( #this_operation #this_rc )
    
    Endroutine
    
    * Add a message to the Return Message List.
    Mthroutine Name(mthAdd_Msg)
    Define_Map For(*INPUT) Class(#BIFMSGC) Name(#this_msg_code)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_msg1)
    Define_Map For(*INPUT) Class(#BIFMSG2) Name(#this_msg2)
    
    #BIFMSGC := #this_msg_code
    #BIFMSG1 := #this_msg1
    #BIFMSG2 := #this_msg2
    Add_Entry To_List(#wLRet)
    Endroutine
    
    * Add a sub message to the Return Message List.
    Mthroutine Name(mthAdd_SubMsg)
    Define_Map For(*INPUT) Class(#BIFMSGC) Name(#this_msg_code)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_msg1)
    Define_Map For(*INPUT) Class(#BIFMSG2) Name(#this_msg2)
    
    #BIFMSGC := #this_msg_code
    #BIFMSG1 := ' ' + #this_msg1
    #BIFMSG2 := #this_msg2
    Add_Entry To_List(#wLRet)
    Endroutine
    
    * Add a sub message to the Return Message List.
    Mthroutine Name(mthAdd_TraceMsg)
    Define_Map For(*INPUT) Class(#BIFMSGC) Name(#this_msg_code)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_msg1)
    Define_Map For(*INPUT) Class(#BIFMSG2) Name(#this_msg2)
    
    If (#LF_TraceData)
    #Com_Owner.mthAdd_SubMsg( #this_msg_code #this_msg1 #this_msg2 )
    Endif
    Endroutine
